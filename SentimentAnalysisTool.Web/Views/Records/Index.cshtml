@model SentimentAnalysisTool.Web.Models.RecordDisplayViewModel

<div class="row">
    <div class="col-12">
        <div class="card mb-2 shadow-sm">
            <div class="card-header">
                Settings
            </div>
            <div class="card-body">
                <div class="d-flex">
                    <div class="mr-auto">
                        <button type="button" class="btn btn-secondary" data-toggle="modal" data-target="#upload-modal">
                            Upload File <i class="fas fa-paper-plane"></i>
                        </button>
                    </div>
                    <div class="ml-auto">
                        <button disabled type="button" id="btnAccuracyProcess" class="btn btn-secondary" data-toggle="modal">
                            Accuracy TextProcessing <i class="fas fa-robot"></i>
                        </button>
                        <button disabled type="button" id="btnConfusionMatrixAlgo" class="btn btn-secondary" data-toggle="modal">
                            Confusion Matrix Algorithmn <i class="fas fa-robot"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row" id="record-display">
    @await Html.PartialAsync("_RecordDisplayPartial", Model)
</div>

@await Html.PartialAsync("_UploadFileFormPartial", new SentimentAnalysisTool.Data.Models.UploadCsvFileModel())

@section scripts{
    <script>
        $(document).ready(function () {
            $('form#formUpload').submit(function (event) {
                event.preventDefault();
                var formData = new FormData(this);
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("UploadCsvFile","Records")',
                    data: formData,
                    beforeSend: function () {
                        $("#upload-modal").modal('hide');
                        $('#spinner-upload').show();
                        $('#formFileSubmit').prop("disabled", true);
                    },
                    complete: function () {
                        $('#spinner-upload').hide();
                    },
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        promptHasNetwork(response);
                    },
                    error: function (response) {
                        promptNoNetwork(response);
                        $("#formFileSubmit").prop("disabled", false);
                    },
                    failure: function (response) { promptNoNetwork(response) },
                }).done(function (response) {
                    console.log(response);
                    $('#record-display').html(response.html);
                    renderReviewClassification(response);
                    promptSuccess(response);
                    var words = response.wordFrequencies.map(function (word) {
                        return {
                            word: word,
                           freq: Math.floor(Math.random() * 10) + 10
                        }
                    });
                    displayKeywordCloud(words);
                });
            });
        });



    </script>
    <script src="~/js/records-index.js"></script>
    <script src="~/js/keyword-cloud.js"></script>
}
