@using SentimentAnalysisTool.Web.Enums
@using SentimentAnalysisTool.Data.Models
@model dynamic
@if (Model.Count == 0)
{
    <p>No results found!</p>
}
else
{
    <div class="table-responsive table-height-comments">
        <table class="table table-hover">
            <thead class="thead-light">
                <tr>
                    <th scope="col">Comment </th>
                    <th scope="col">Transformed Comment </th>
                    <th scope="col">Score </th>
                    <th scope="col">Sentiment </th>
                    <th scope="col">Date </th>
                    <th scope="col">Action </th>
                    <th scope="col">Algorithmn </th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    <tr>
                        <td>@Model[i].CommentDetail</td>
                        <td>@Model[i].TransformedCommentDetail</td>
                        @if (Model[i].CommentScore >= 1 && Model[i].CommentScore <= 2)
                        {
                            <td><span class="badge badge-pill badge-dark">@Model[i].CommentScore / 5</span></td>
                        }
                        else if (Model[i].CommentScore >= 4 && Model[i].CommentScore <= 5)
                        {
                            <td><span class="badge badge-pill badge-light">@Model[i].CommentScore / 5</span></td>
                        }
                        else
                        {
                            <td><span class="badge badge-pill badge-secondary">@Model[i].CommentScore / 5</span></td>
                        }

                        @if (Model[i].CommentPolarity == SentimentAnalysisTool.Web.Enums.SentimentType.Positive)
                        {
                            <td><span class="badge badge-light">@Model[i].CommentPolarity <i class="fas fa-smile"></i></span></td>
                        }
                        else if (Model[i].CommentPolarity == SentimentAnalysisTool.Web.Enums.SentimentType.Negative)
                        {
                            <td><span class="badge badge-dark">@Model[i].CommentPolarity <i class="fas fa-sad-tear"></i></span></td>
                        }
                        else
                        {
                            <td><span class="badge badge-secondary">@Model[i].CommentPolarity</span></td>
                        }

                        <td>@Model[i].Date</td>
                        <td>
                            <!-- Button trigger modal -->
                            <button type="button" class="btn btn-dark" data-toggle="modal" data-target="#resultModal_@i">
                                View computed results
                            </button>
                        </td>
                        <td>Hybrid Algorithmn</td>
                    </tr>
                    ViewData["index"] = i;
                    switch (Model[i].Algorithmn)
                    {
                        case AlgorithmnType.Hybrid:
                            @await Html.PartialAsync("_ComputedResultsHybridPartial", (HybridModel)Model[i].AlgorithmnGrade)
                            break;
                        case AlgorithmnType.SentiWordNet:
                            @await Html.PartialAsync("_ComputedResultsSentiwordPartial", (SentiWordNetModel)Model[i].AlgorithmnGrade)
                            break;
                        case AlgorithmnType.Vader:
                            @await Html.PartialAsync("_ComputedResultsVaderPartial", (VaderModel)Model[i].AlgorithmnGrade)
                            break;
                    }
                }
            </tbody>
        </table>
    </div>
}


